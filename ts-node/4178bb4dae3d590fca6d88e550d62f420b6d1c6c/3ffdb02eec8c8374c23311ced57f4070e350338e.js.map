{"version":3,"file":"/Users/Ali/Projects/Alisch-ng2/webpack.config.ts","sources":["/Users/Ali/Projects/Alisch-ng2/webpack.config.ts"],"names":[],"mappings":"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","sourcesContent":["var webpack = require('webpack');\nvar path = require('path');\nvar clone = require('js.clone');\nvar webpackMerge = require('webpack-merge');\n\nexport var commonPlugins = [\n  new webpack.ContextReplacementPlugin(\n    // The (\\\\|\\/) piece accounts for path separators in *nix and Windows\n    /angular(\\\\|\\/)core(\\\\|\\/)src(\\\\|\\/)linker/,\n    root('./src'),\n    {\n      // your Angular Async Route paths relative to this root directory\n    }\n  ),\n\n  // Loader options\n  new webpack.LoaderOptionsPlugin({\n\n  }),\n\n];\nexport var commonConfig = {\n  // https://webpack.github.io/docs/configuration.html#devtool\n  devtool: 'source-map',\n  resolve: {\n    extensions: ['.ts', '.js', '.json'],\n    modules: [ root('node_modules') ]\n  },\n  context: __dirname,\n  output: {\n    publicPath: '',\n    filename: '[name].bundle.js'\n  },\n  module: {\n    rules: [\n      // TypeScript\n      { test: /\\.ts$/,   use: ['awesome-typescript-loader', 'angular2-template-loader'] },\n      { test: /\\.html$/, use: 'raw-loader' },\n      { test: /\\.css$/,  use: 'raw-loader' },\n      { test: /\\.json$/, use: 'json-loader' }\n    ],\n  },\n  plugins: [\n    // Use commonPlugins.\n  ]\n\n};\n\n// Client.\nexport var clientPlugins = [\n\n];\nexport var clientConfig = {\n  target: 'web',\n  entry: './src/client',\n  output: {\n    path: root('dist/client')\n  },\n  node: {\n    global: true,\n    crypto: 'empty',\n    __dirname: true,\n    __filename: true,\n    process: true,\n    Buffer: false\n  }\n};\n\n\n// Server.\nexport var serverPlugins = [\n\n];\nexport var serverConfig = {\n  target: 'node',\n  entry: './src/server', // use the entry file of the node server if everything is ts rather than es5\n  output: {\n    filename: 'index.js',\n    path: root('dist/server'),\n    libraryTarget: 'commonjs2'\n  },\n  module: {\n    rules: [\n      { test: /@angular(\\\\|\\/)material/, use: \"imports-loader?window=>global\" }\n    ],\n  },\n  externals: includeClientPackages(\n    /@angularclass|@angular|angular2-|ng2-|ng-|@ng-|angular-|@ngrx|ngrx-|@angular2|ionic|@ionic|-angular2|-ng2|-ng/\n  ),\n  node: {\n    global: true,\n    crypto: true,\n    __dirname: true,\n    __filename: true,\n    process: true,\n    Buffer: true\n  }\n};\n\nexport default [\n  // Client\n  webpackMerge(clone(commonConfig), clientConfig, { plugins: clientPlugins.concat(commonPlugins) }),\n\n  // Server\n  webpackMerge(clone(commonConfig), serverConfig, { plugins: serverPlugins.concat(commonPlugins) })\n];\n\n\n\n\n// Helpers\nexport function includeClientPackages(packages, localModule?: string[]) {\n  return function(context, request, cb) {\n    if (localModule instanceof RegExp && localModule.test(request)) {\n      return cb();\n    }\n    if (packages instanceof RegExp && packages.test(request)) {\n      return cb();\n    }\n    if (Array.isArray(packages) && packages.indexOf(request) !== -1) {\n      return cb();\n    }\n    if (!path.isAbsolute(request) && request.charAt(0) !== '.') {\n      return cb(null, 'commonjs ' + request);\n    }\n    return cb();\n  };\n}\n\nexport function root(args) {\n  args = Array.prototype.slice.call(arguments, 0);\n  return path.join.apply(path, [__dirname].concat(args));\n}\n"]}