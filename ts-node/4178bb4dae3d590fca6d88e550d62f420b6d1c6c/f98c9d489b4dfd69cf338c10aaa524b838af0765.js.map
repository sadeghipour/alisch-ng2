{"version":3,"file":"/Users/Ali/Projects/Alisch-ng2/webpack.prod.config.ts","sources":["/Users/Ali/Projects/Alisch-ng2/webpack.prod.config.ts"],"names":[],"mappings":"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","sourcesContent":["const webpack = require('webpack');\nconst path = require('path');\nconst clone = require('js.clone');\nconst webpackMerge = require('webpack-merge');\nconst V8LazyParseWebpackPlugin = require('v8-lazy-parse-webpack-plugin');\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\nimport webpackConfig, { root,  includeClientPackages } from './webpack.config';\n// const CompressionPlugin = require('compression-webpack-plugin');\n\n\nexport const commonPlugins = [\n  new V8LazyParseWebpackPlugin(),\n\n  new webpack.DefinePlugin({\n    // do not use an object for 'process.env' otherwise all other environment\n    // variables are set to 'undefined' see issue #291\n    'process.env.NODE_ENV': JSON.stringify('production'),\n    'process.env.AOT': true\n  }),\n\n  // Loader options\n  new webpack.LoaderOptionsPlugin({\n    minimize: true,\n    debug: false\n  }),\n\n  new webpack.NormalModuleReplacementPlugin(\n    /facade(\\\\|\\/)async/,\n    root('node_modules/@angular/core/src/facade/async.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /facade(\\\\|\\/)collection/,\n    root('node_modules/@angular/core/src/facade/collection.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /facade(\\\\|\\/)errors/,\n    root('node_modules/@angular/core/src/facade/errors.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /facade(\\\\|\\/)lang/,\n    root('node_modules/@angular/core/src/facade/lang.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /facade(\\\\|\\/)math/,\n    root('node_modules/@angular/core/src/facade/math.js')\n  ),\n\n];\nexport const commonConfig = {\n  output: {\n    filename: '[name].bundle.js',\n    chunkFilename: '[chunkhash].js'\n  },\n};\n\n// Client.\nexport const clientPlugins = [\n  new BundleAnalyzerPlugin({\n    analyzerMode: 'disabled', // change it to `server` to view bundle stats\n    reportFilename: 'report.html',\n    generateStatsFile: true,\n    statsFilename: 'stats.json',\n  }),\n  // To use gzip, you can run 'npm install compression-webpack-plugin --save-dev'\n  // add 'var CompressionPlugin = require(\"compression-webpack-plugin\");' on the top\n  // and comment out below codes\n  //\n  // new CompressionPlugin({\n  //   asset: \"[path].gz[query]\",\n  //   algorithm: \"gzip\",\n  //   test: /\\.js$|\\.css$|\\.html$/,\n  //   threshold: 10240,\n  //   minRatio: 0.8\n  // }),\n\n  new webpack.optimize.UglifyJsPlugin({\n    // beautify: true,\n    // mangle: false,\n    output: {\n      comments: false\n    },\n    compress: {\n      warnings: false,\n      conditionals: true,\n      unused: true,\n      comparisons: true,\n      sequences: true,\n      dead_code: true,\n      evaluate: true,\n      if_return: true,\n      join_vars: true,\n      negate_iife: false // we need this for lazy v8\n    },\n    sourceMap: true\n  }),\n\n  new webpack.NormalModuleReplacementPlugin(\n    /@angular(\\\\|\\/)upgrade/,\n    root('empty.js')\n  ),\n  // problem with platformUniversalDynamic on the server/client\n  new webpack.NormalModuleReplacementPlugin(\n    /@angular(\\\\|\\/)compiler/,\n    root('empty.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /@angular(\\\\|\\/)platform-browser-dynamic/,\n    root('empty.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /dom(\\\\|\\/)debug(\\\\|\\/)ng_probe/,\n    root('empty.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /dom(\\\\|\\/)debug(\\\\|\\/)by/,\n    root('empty.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /src(\\\\|\\/)debug(\\\\|\\/)debug_node/,\n    root('empty.js')\n  ),\n  new webpack.NormalModuleReplacementPlugin(\n    /src(\\\\|\\/)debug(\\\\|\\/)debug_renderer/,\n    root('empty.js')\n  ),\n\n  // Waiting for https://github.com/ampedandwired/html-webpack-plugin/issues/446\n  // new webpack.optimize.AggressiveSplittingPlugin({\n  //   minSize: 30000,\n  //   maxSize: 250000\n  // }),\n\n];\nexport const clientConfig = {\n  entry: './src/client.aot',\n  recordsOutputPath: root('webpack.records.json')\n};\n\n// Server.\n\nexport const serverPlugins = [\n  new webpack.optimize.UglifyJsPlugin({\n    // beautify: true,\n    mangle: false, // to ensure process.env still works\n    output: {\n      comments: false\n    },\n    compress: {\n      warnings: false,\n      conditionals: true,\n      unused: true,\n      comparisons: true,\n      sequences: true,\n      dead_code: true,\n      evaluate: true,\n      if_return: true,\n      join_vars: true,\n      negate_iife: false // we need this for lazy v8\n    },\n    sourceMap: true\n  }),\n];\nexport const serverConfig = {\n  entry: './src/server.aot',\n  output: {\n    filename: 'index.js',\n    chunkFilename: '[id].bundle.js',\n    crossOriginLoading: false\n  },\n};\n\nexport default [\n  // Client\n  webpackMerge(webpackConfig[0], clone(commonConfig), clientConfig, {plugins: webpackConfig[0].plugins.concat(commonPlugins, clientPlugins) }),\n\n  // Server\n  webpackMerge(webpackConfig[1], clone(commonConfig), serverConfig, {plugins: webpackConfig[1].plugins.concat(commonPlugins, serverPlugins) })\n];\n"]}